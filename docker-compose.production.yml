services:
  web:
    build: .
    container_name: pharmasky_web
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./logs:/app/logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      - DEBUG=False
      - DJANGO_SETTINGS_MODULE=project.settings_simple
      # Security: Use environment variables instead of hardcoded values
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-167.71.40.9,129.212.140.152,164.90.217.81,localhost,127.0.0.1}
      - DATABASE_URL=${DATABASE_URL}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-http://167.71.40.9,http://129.212.140.152,http://164.90.217.81,http://localhost}
      - CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS:-http://167.71.40.9,http://129.212.140.152,http://164.90.217.81,http://localhost}
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
      # OpenAI/AI Agent
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DIGITALOCEAN_AGENT_URL=${DIGITALOCEAN_AGENT_URL}
    env_file:
      - production.env
    depends_on:
      - redis
    networks:
      - pharmasky_network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: pharmasky_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./ssl:/etc/nginx/ssl
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    depends_on:
      - web
    networks:
      - pharmasky_network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: pharmasky_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pharmasky_network
    restart: unless-stopped

  celery:
    build: .
    container_name: pharmasky_celery
    command: celery -A project worker --loglevel=info
    volumes:
      - .:/app
      - media_volume:/app/media
      - ./logs:/app/logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    env_file:
      - production.env
    depends_on:
      - web
      - redis
    networks:
      - pharmasky_network
    restart: unless-stopped

  celery-beat:
    build: .
    container_name: pharmasky_celery_beat
    command: celery -A project beat --loglevel=info
    volumes:
      - .:/app
    environment:
      - DATABASE_URL=${DATABASE_URL}
    env_file:
      - production.env
    depends_on:
      - web
      - redis
    networks:
      - pharmasky_network
    restart: unless-stopped

volumes:
  static_volume:
  media_volume:
  redis_data:

networks:
  pharmasky_network:
    driver: bridge

